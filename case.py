# -*- coding: utf-8 -*-
"""case.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HtrQtj95CIugx6960tWiORbnRRcZWi7R
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load datasets
signal_timings_path = "/content/signal_timings_data.csv"
traffic_flow_path = "/content/traffic_flow_data.csv"

signal_df = pd.read_csv(signal_timings_path)
traffic_df = pd.read_csv(traffic_flow_path)

traffic_df["Hour"] = pd.to_numeric(traffic_df["Hour"])

# Data Exploration
print("Traffic Data Overview:\n", traffic_df.head())
print("\nSignal Timings Data Overview:\n", signal_df.head())
print("\nMissing Values Check:\n", traffic_df.isnull().sum())

# Aggregations
intersection_traffic = traffic_df.groupby("Intersection")["Vehicle_Count"].sum().reset_index()
hourly_traffic = traffic_df.groupby("Hour")["Vehicle_Count"].sum().reset_index()
merged_data = pd.merge(signal_df, intersection_traffic, on="Intersection")

# Traffic Volume by Intersection
plt.figure(figsize=(12, 6))
sns.barplot(data=intersection_traffic, x="Intersection", y="Vehicle_Count", palette="coolwarm")
plt.xticks(rotation=45)
plt.xlabel("Intersection")
plt.ylabel("Total Vehicles")
plt.title("Traffic Volume at Each Intersection")
plt.grid(axis='y')
plt.show()

# Traffic Volume Trends by Hour
plt.figure(figsize=(12, 6))
sns.lineplot(data=hourly_traffic, x="Hour", y="Vehicle_Count", marker="o", color="blue")
plt.xlabel("Hour of the Day")
plt.ylabel("Total Vehicle Count")
plt.title("Traffic Volume Trends by Hour")
plt.grid(True)
plt.show()

# Green Light Duration vs Traffic Flow
plt.figure(figsize=(10, 5))
sns.scatterplot(data=merged_data, x="Green_Light_Duration", y="Vehicle_Count", hue="Intersection", size="Vehicle_Count", palette="viridis")
plt.xlabel("Green Light Duration (seconds)")
plt.ylabel("Total Vehicles Count")
plt.title("Impact of Green Light Duration on Traffic Flow")
plt.grid(True)
plt.show()

# Red Light Duration vs Traffic Flow
plt.figure(figsize=(10, 5))
sns.scatterplot(data=merged_data, x="Red_Light_Duration", y="Vehicle_Count", hue="Intersection", size="Vehicle_Count", palette="coolwarm")
plt.xlabel("Red Light Duration (seconds)")
plt.ylabel("Total Vehicles Count")
plt.title("Impact of Red Light Duration on Traffic Flow")
plt.grid(True)
plt.show()

# Traffic Heatmap
traffic_pivot = traffic_df.pivot_table(index="Intersection", columns="Hour", values="Vehicle_Count", aggfunc="sum")
plt.figure(figsize=(12, 6))
sns.heatmap(traffic_pivot, cmap="Reds", annot=True, fmt=".0f")
plt.xlabel("Hour of the Day")
plt.ylabel("Intersection")
plt.title("Traffic Intensity Heatmap")
plt.show()

# Vehicle Type Distribution
plt.figure(figsize=(12, 6))
sns.boxplot(data=traffic_df, x="Vehicle_Type", y="Vehicle_Count", palette="Set3")
plt.xlabel("Vehicle Type")
plt.ylabel("Vehicle Count")
plt.title("Distribution of Vehicle Counts by Type")
plt.xticks(rotation=30)
plt.grid(axis='y')
plt.show()

# Insights & Conclusions
peak_hour = hourly_traffic.loc[hourly_traffic["Vehicle_Count"].idxmax()]
print(f"\nPeak Traffic Hour: {peak_hour['Hour']} with {peak_hour['Vehicle_Count']} vehicles.")

busiest_intersection = intersection_traffic.loc[intersection_traffic["Vehicle_Count"].idxmax()]
print(f"Busiest Intersection: {busiest_intersection['Intersection']} with {busiest_intersection['Vehicle_Count']} vehicles.")

correlation_green = merged_data["Green_Light_Duration"].corr(merged_data["Vehicle_Count"])
print(f"\nCorrelation Between Green Light Duration & Traffic Flow: {correlation_green:.2f}")

correlation_red = merged_data["Red_Light_Duration"].corr(merged_data["Vehicle_Count"])
print(f"Correlation Between Red Light Duration & Traffic Flow: {correlation_red:.2f}")